1. Briefly describe the differences between the webbrowser, requests, bs4, and selenium modules.

A: Taking each module in turn:

   - webbrowser: this module allows you to open and close webpages but that's about it 
   - requests: this module allows you to download webpages in HTML format from the internet
   - bs4: this module allows you to parse HTML. That is, systematically analyse and decompose webpages downloaded via requests 
   - selenium: this module allows you to programmatically control a webbrowser 

2. What type of object is returned by requests.get()? How can you access the downloaded content as a string value?

A: A 'Response' object is returned by this particular method. You can access the downloaded content by way of the 'text' attribute

3. What requests method checks that the download worked?

A: res.raise_for_status() (where 'res' is a response object)

4. How can you get the HTTP status code of a requests response?

A: res.status_code (where 'res' is a response object)

5. How do you save a requests response to a file?

A: You have to open() a file connection and then iteratively write() 'chunks' of the response object to the hard drive

6. What is the keyboard shortcut for opening a browser’s developer tools?

A: CMD-Option-C

7. How can you view (in the developer tools) the HTML of a specific element on a web page?

A: Right click the object and click 'inspect element'

8. What is the CSS selector string that would find the element with an id attribute of main?

A: '#main'

9. What is the CSS selector string that would find the elements with a CSS class of highlight?

A: '.highlight'

10. What is the CSS selector string that would find all the <div> elements inside another <div> element?

A: 'div div'

11. What is the CSS selector string that would find the <button> element with a value attribute set to favorite?

A: 'button[value="favorite"]'

12. Say you have a Beautiful Soup Tag object stored in the variable spam for the element <div>Hello, world!</div>. How could you get a string 'Hello, world!' from the Tag object?

A: spam.get('div')

13. How would you store all the attributes of a Beautiful Soup Tag object in a variable named linkElem?

A: linkElem.attrs

14. Running import selenium doesn’t work. How do you properly import the selenium module?

A: from selenium import webdriver

15. What’s the difference between the find_element_* and find_elements_* methods?

A: The first method returns the first element found on the page for a given selector. The second will return all of them as a list

16. What methods do Selenium’s WebElement objects have for simulating mouse clicks and keyboard keys?

A: It has click() and send_keys()

17. You could call send_keys(Keys.ENTER) on the Submit button’s WebElement object, but what is an easier way to submit a form with selenium?

A: Just select any element within the form and then apply the 'submit()' method to it

18. How can you simulate clicking a browser’s Forward, Back, and Refresh buttons with selenium?

A: Respectively, forward(), back() and refresh()