---- Answers to practice questions ----

1. Why are functions advantageous to have in your programs?

They're useful because often you have to repeat a certain calculation multiple times.

More importantly, compartmentalising functionality allows you to correct errors more
efficiently!

2. When does a function execute - when the function is defined or when the functon is called?

Code in a function executes when the function is called (not when it is defined).

3. What statement creates a function?

The 'def' statement.

4. What is the difference between a function and a function call?

A function is simply a template for a procedure.

A function call however is the act of requesting a given function to operate according to its defined procedure.

5. How many global scopes and local scopes exist within Python?

There is only one global scope. There are multiple local scopes, equal to the number of
defined functions.

6. What happens to variables in a local scope when the function call returns?

They are destroyed.

7. What is a return value? Can a return value be part of an expression?

A return value is the value created by a given function.

8. If a function does not have a return statement, what is the return value of a call to that function?

Functions without a return value will return the special python value 'None' (the only value of the 'NoneType' data type)

9. How can you force a variable in a function to refer to the global variable?

By prepending the function variable with the 'global ...' statement

10. What is the data type of None?

The data type of 'None' is 'NoneType'.

11. What does the 'import areallyourpetsnamederic' statement do?

It imports all of the functions associated with that library (module).

12. If you had a function named 'bacon()' in a module named 'spam', how would you call it after importing 'spam'?

The way in which you would call this method would be 'spam.bacon()'.

13. How can you prevent a program from crashing when it gets an error?

By using the 'try ... except ...' phrase.

14. What goes in the 'try ...' clause? What goes in the 'except' clause?

The code which could potentially throw an error and the return value if an error is thrown, respectively.


Extra

Q. Define the terms 'define, call, pass, argument and parameter'

Well,

- 'define' refers to the creation of a function;
- 'call' refers to the execution of that function;
- 'pass' refers to the act of passing an argument to a function;
- 'argument' is the name of a given input to a function; and
- 'parameter' refers to local function variables which have arguments assigned to them.
