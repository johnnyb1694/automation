1. Write an assert statement that triggers an AssertionError if the variable spam is an integer less than 10.

A: An assert statement is composed of four parts, (i) the 'assert' keyword; (ii) a condition; (iii) a comma; followed by (iv) a string to display when the condition is false

   Thus in this scenario, a possible assert statement could be:

   assert spam >= 10, 'The variable "spam" must be at least 10!'

2. Write an assert statement that triggers an AssertionError if the variables eggs and bacon contain strings that are the same as each other, even if their cases are different (that is, 'hello' and 'hello' are considered the same, and 'goodbye' and 'GOODbye' are also considered the same).

A: assert eggs.lower() != bacon.lower(), 'The variables "eggs" and "bacon" cannot contain the same strings!'

3. Write an assert statement that always triggers an AssertionError.

A: assert False, 'This will always trigger.'

4. What are the two lines that your program must have in order to be able to call logging.debug()?

A: The first line is (i) 'import logging'; and the second line is (ii) logging.basicConfig(level=logging.DEBUG, format=...)

5. What are the two lines that your program must have in order to have logging.debug() send a logging message to a file named programLog.txt?

A: You need to include a value for the parameter 'filename' and ...

6. What are the five logging levels?

A: DEBUG, INFO, WARNING, ERROR, CRITICAL

7. What line of code can you add to disable all logging messages in your program?

A: logging.disable(logging.CRITICAL)

8. Why is using logging messages better than using print() to display the same message?

A: If you use the 'print()' function, it can be hard to remove them from your code afterwards whereas in the case of logging, you can simply add a 'logging.disable(logging.CRITICAL)' call at the end of the script.

   The point is that logging messages can also provide timestamps and other useful information which would be fiddly and manual to include in within the context of 'printing' information alone.
